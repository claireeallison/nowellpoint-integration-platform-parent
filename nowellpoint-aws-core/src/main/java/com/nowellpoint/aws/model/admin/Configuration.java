package com.nowellpoint.aws.model.admin;

import java.util.Date;
import java.util.Set;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.encryption.DoNotEncrypt;

@DynamoDBTable(tableName="Configurations")
public class Configuration {

	@DynamoDBAutoGeneratedKey
	@DynamoDBHashKey(attributeName="Id")  
	private String id;
	
	@DynamoDBVersionAttribute
	private Integer version;
	
	@DynamoDBAttribute(attributeName="Name")  
	private String name;
	
	@DynamoDBAttribute(attributeName="CreatedDate")  
	private Date createdDate;
	
	@DynamoDBAttribute(attributeName="LastModifiedDate")  
	private Date lastModifiedDate;
	
	@DynamoDBAttribute(attributeName="SalesforceClientId")
	private String salesforceClientId;
	
	@DynamoDBAttribute(attributeName="SalesforceClientSecret")
	private String salesforceClientSecret;
	
	@DynamoDBAttribute(attributeName="RedirectUri")
	private String redirectUri;
	
	@DynamoDBAttribute(attributeName="LogglyApiKey")
	private String logglyApiKey;
	
	@DynamoDBAttribute(attributeName="MongoClientUri")
	private String mongoClientUri;
	
	@DynamoDBAttribute(attributeName="StormpathApiKeyId")
	private String stormpathApiKeyId;
	
	@DynamoDBAttribute(attributeName="StormpathApiKeySecret")
	private String stormpathApiKeySecret;
	
	@DynamoDBAttribute(attributeName="StormpathApiEndpoint")
	private String stormpathApiEndpoint;
	
	@DynamoDBAttribute(attributeName="StormpathApplicationId")
	private String stormpathApplicationId;
	
	@DynamoDBAttribute(attributeName="StormpathDirectoryId")
	private String stormpathDirectoryId;
	
	@DynamoDBAttribute(attributeName="KmsKeyId")
	private String kmsKeyId;
	
	@DynamoDBAttribute(attributeName="SalesforceTokenUri")
	private String salesforceTokenUri;
	
	@DynamoDBAttribute(attributeName="SalesforceRefreshUri")
	private String salesforceRefreshUri;
	
	@DynamoDBAttribute(attributeName="SalesforceRevokeUri")
	private String salesforceRevokeUri;
	
	@DynamoDBAttribute(attributeName="SalesforceUsername")
	private String salesforceUsername;
	
	@DynamoDBAttribute(attributeName="SalesforcePassword")
	private String salesforcePassword;
	
	@DynamoDBAttribute(attributeName="SalesforceSecurityToken")
	private String salesforceSecurityToken;
	
	@DynamoDBAttribute(attributeName="SendgridApiKey")
	private String sendGridApiKey;
	
	@DynamoDBAttribute(attributeName="RedisPassword")
	private String redisPassword;
	
	@DynamoDBAttribute(attributeName="DefaultOrganizationId")
	private String defaultOrganizationId;
	
	@DynamoDBAttribute(attributeName="DefaultAccountId")
	private String defaultAccountId;
	
	@DynamoDBAttribute(attributeName="Stormpath")
	private Set<String> stormpath;
	
	public Configuration() {
		
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}
	
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@DoNotEncrypt
	public String getName() {
		return name;
	}
	
	public void setName(String name) {
		this.name = name;
	}

	@DoNotEncrypt
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@DoNotEncrypt
	public Date getLastModifiedDate() {
		return lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	public String getSalesforceClientId() {
		return salesforceClientId;
	}

	public void setSalesforceClientId(String salesforceClientId) {
		this.salesforceClientId = salesforceClientId;
	}

	public String getSalesforceClientSecret() {
		return salesforceClientSecret;
	}

	public void setSalesforceClientSecret(String salesforceClientSecret) {
		this.salesforceClientSecret = salesforceClientSecret;
	}

	@DoNotEncrypt
	public String getRedirectUri() {
		return redirectUri;
	}

	public void setRedirectUri(String redirectUri) {
		this.redirectUri = redirectUri;
	}

	public String getLogglyApiKey() {
		return logglyApiKey;
	}

	public void setLogglyApiKey(String logglyApiKey) {
		this.logglyApiKey = logglyApiKey;
	}

	public String getMongoClientUri() {
		return mongoClientUri;
	}

	public void setMongoClientUri(String mongoClientUri) {
		this.mongoClientUri = mongoClientUri;
	}

	public String getStormpathApiKeyId() {
		return stormpathApiKeyId;
	}

	public void setStormpathApiKeyId(String stormpathApiKeyId) {
		this.stormpathApiKeyId = stormpathApiKeyId;
	}

	public String getStormpathApiKeySecret() {
		return stormpathApiKeySecret;
	}

	public void setStormpathApiKeySecret(String stormpathApiKeySecret) {
		this.stormpathApiKeySecret = stormpathApiKeySecret;
	}

	@DoNotEncrypt
	public String getStormpathApiEndpoint() {
		return stormpathApiEndpoint;
	}

	public void setStormpathApiEndpoint(String stormpathApiEndpoint) {
		this.stormpathApiEndpoint = stormpathApiEndpoint;
	}

	@DoNotEncrypt
	public String getStormpathApplicationId() {
		return stormpathApplicationId;
	}

	public void setStormpathApplicationId(String stormpathApplicationId) {
		this.stormpathApplicationId = stormpathApplicationId;
	}

	@DoNotEncrypt
	public String getStormpathDirectoryId() {
		return stormpathDirectoryId;
	}

	public void setStormpathDirectoryId(String stormpathDirectoryId) {
		this.stormpathDirectoryId = stormpathDirectoryId;
	}

	public String getKmsKeyId() {
		return kmsKeyId;
	}

	public void setKmsKeyId(String kmsKeyId) {
		this.kmsKeyId = kmsKeyId;
	}

	@DoNotEncrypt
	public String getSalesforceTokenUri() {
		return salesforceTokenUri;
	}

	public void setSalesforceTokenUri(String salesforceTokenUri) {
		this.salesforceTokenUri = salesforceTokenUri;
	}

	@DoNotEncrypt
	public String getSalesforceRefreshUri() {
		return salesforceRefreshUri;
	}

	public void setSalesforceRefreshUri(String salesforceRefreshUri) {
		this.salesforceRefreshUri = salesforceRefreshUri;
	}

	@DoNotEncrypt
	public String getSalesforceRevokeUri() {
		return salesforceRevokeUri;
	}

	public void setSalesforceRevokeUri(String salesforceRevokeUri) {
		this.salesforceRevokeUri = salesforceRevokeUri;
	}

	public String getSalesforceUsername() {
		return salesforceUsername;
	}

	public void setSalesforceUsername(String salesforceUsername) {
		this.salesforceUsername = salesforceUsername;
	}

	public String getSalesforcePassword() {
		return salesforcePassword;
	}

	public void setSalesforcePassword(String salesforcePassword) {
		this.salesforcePassword = salesforcePassword;
	}

	public String getSalesforceSecurityToken() {
		return salesforceSecurityToken;
	}

	public void setSalesforceSecurityToken(String salesforceSecurityToken) {
		this.salesforceSecurityToken = salesforceSecurityToken;
	}

	public String getSendGridApiKey() {
		return sendGridApiKey;
	}

	public void setSendGridApiKey(String sendGridApiKey) {
		this.sendGridApiKey = sendGridApiKey;
	}

	public String getRedisPassword() {
		return redisPassword;
	}

	public void setRedisPassword(String redisPassword) {
		this.redisPassword = redisPassword;
	}

	@DoNotEncrypt
	public String getDefaultOrganizationId() {
		return defaultOrganizationId;
	}

	public void setDefaultOrganizationId(String defaultOrganizationId) {
		this.defaultOrganizationId = defaultOrganizationId;
	}

	@DoNotEncrypt
	public String getDefaultAccountId() {
		return defaultAccountId;
	}

	public void setDefaultAccountId(String defaultAccountId) {
		this.defaultAccountId = defaultAccountId;
	}

	public Set<String> getStormpath() {
		return stormpath;
	}

	public void setStormpath(Set<String> stormpath) {
		this.stormpath = stormpath;
	}
}